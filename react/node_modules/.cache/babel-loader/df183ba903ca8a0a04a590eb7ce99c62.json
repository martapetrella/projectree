{"ast":null,"code":"import axios from 'axios';\nvar REACT_APP_API = process.env.REACT_APP_API;\nexport function setLoading(status) {\n  return {\n    type: 'SET_LOADING',\n    status: status\n  };\n}\nexport function setLang(lang) {\n  return {\n    type: 'SET_LANG',\n    payload: {\n      lang: lang\n    }\n  };\n}\nexport function setTracker(tracker) {\n  return {\n    type: 'SET_TRACKID',\n    payload: {\n      tracker: tracker\n    }\n  };\n}\nexport function fetchProds(lang) {\n  var langQuery = lang !== undefined && lang !== '' ? '?lang=' + lang : '';\n  var apiUrl = REACT_APP_API + 'product/read.php' + langQuery;\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_PRODS',\n        payload: {\n          list: resp.data.records,\n          loading: false\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_PRODS',\n        payload: {\n          list: [],\n          loading: false\n        }\n      });\n    });\n  };\n}\nexport function fetchProd(prodId) {\n  var apiUrl = REACT_APP_API + 'product/read_one.php?id=' + prodId;\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_PROD',\n        payload: {\n          list: resp.data,\n          loading: false\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_PROD',\n        payload: {\n          list: [],\n          loading: false\n        }\n      });\n    });\n  };\n}\nexport function fetchCategs() {\n  //const apiUrl = REACT_APP_API+'categories/read_one.php?id='+prodId;\n  var apiUrl = '/shop/mock/cats.json';\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_CATEGS',\n        payload: {\n          list: resp.data\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_CATEGS',\n        payload: {\n          list: []\n        }\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/offerprive.it/react/src/state/actions.js"],"names":["axios","REACT_APP_API","process","env","setLoading","status","type","setLang","lang","payload","setTracker","tracker","fetchProds","langQuery","undefined","apiUrl","dispatch","getState","get","then","resp","list","data","records","loading","error","fetchProd","prodId","fetchCategs"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst { REACT_APP_API } = process.env\n\nexport function setLoading(status) {\n    return {\n      type: 'SET_LOADING',\n      status\n    }\n}\n\nexport function setLang(lang) {\n  return {\n    type: 'SET_LANG',\n    payload: {\n      lang\n    }\n  }\n}\n\nexport function setTracker(tracker) {\n  return {\n    type: 'SET_TRACKID',\n    payload: {\n      tracker\n    }\n  }\n}\n\nexport function fetchProds(lang) {\n  const langQuery = ( lang !== undefined && lang !== '' ) ? '?lang='+lang : ''\n  const apiUrl = REACT_APP_API+'product/read.php'+langQuery;\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_PRODS',\n            payload: {\n              list: resp.data.records,\n              loading: false\n            }\n        });\n    }, error => {\n      dispatch({\n          type: 'SET_PRODS',\n          payload: {\n              list: [],\n              loading: false\n          }\n      });\n    })\n  };\n}\n\nexport function fetchProd(prodId) {\n  const apiUrl = REACT_APP_API+'product/read_one.php?id='+prodId;\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_PROD',\n            payload: {\n              list: resp.data,\n              loading: false\n            }\n        })\n    }, error => {\n      dispatch({\n          type: 'SET_PROD',\n          payload: {\n              list: [],\n              loading: false\n          }\n      })\n    })\n  }\n}\n\nexport function fetchCategs() {\n  //const apiUrl = REACT_APP_API+'categories/read_one.php?id='+prodId;\n  const apiUrl = '/shop/mock/cats.json'\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_CATEGS',\n            payload: {\n              list: resp.data\n            }\n        })\n    }, error => {\n      dispatch({\n          type: 'SET_CATEGS',\n          payload: {\n              list: []\n          }\n      })\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}