{"ast":null,"code":"var _jsxFileName = \"/Users/wefed01/Sites/projectree/react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { store } from './state/store';\nimport { HashRouter } from 'react-router-dom';\nimport './styles/style.scss';\nimport './style.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(HashRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister(); // Qui annoto (solo in dev) le prossime cose da fare\n\nif (process.env.REACT_APP_STAGE === 'dev') {\n  var todos = [//{prio:2,text:\"\"},\n  ];\n\n  if (todos.length > 0) {\n    console.info(' ');\n    console.info(' ');\n    console.info('================== ToDo ==================');\n    todos.map(function (t, i) {\n      if (!!t.text) {\n        var num = i + 1 + ') ';\n        var type = !!t.type ? t.type === 'B' ? 'BUG' : t.type === 'R' ? 'REFINEMENT' : t.type : 'TASK';\n        var info = num + '[' + type + '] ' + t.text;\n\n        if (t.prio === 1) {\n          console.error(info);\n        } else if (t.prio === 2) {\n          console.warn(info);\n        } else {\n          console.info(info);\n        }\n      }\n\n      return true;\n    });\n    console.info('==========================================');\n    console.info(' ');\n    console.info(' ');\n  }\n}","map":{"version":3,"sources":["/Users/wefed01/Sites/projectree/react/src/index.js"],"names":["React","ReactDOM","Provider","store","HashRouter","App","serviceWorker","render","document","getElementById","unregister","process","env","REACT_APP_STAGE","todos","length","console","info","map","t","i","text","num","type","prio","error","warn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,qBAAP;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAL,QAAQ,CAACM,MAAT,CACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADF,CADF,EAMAK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANA,E,CAQA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd,G,CAEA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,eAAZ,KAAgC,KAApC,EAA4C;AAC1C,MAAIC,KAAK,GAAG,CACV;AADU,GAAZ;;AAGA,MAAIA,KAAK,CAACC,MAAN,GAAe,CAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAc,GAAd;AACAD,IAAAA,OAAO,CAACC,IAAR,CAAc,GAAd;AACAD,IAAAA,OAAO,CAACC,IAAR,CAAc,4CAAd;AACAH,IAAAA,KAAK,CAACI,GAAN,CAAU,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClB,UAAG,CAAC,CAACD,CAAC,CAACE,IAAP,EAAa;AACX,YAAIC,GAAG,GAAIF,CAAC,GAAC,CAAH,GAAM,IAAhB;AACA,YAAIG,IAAI,GAAG,CAAC,CAACJ,CAAC,CAACI,IAAJ,GAAaJ,CAAC,CAACI,IAAF,KAAS,GAAV,GAAiB,KAAjB,GAA0BJ,CAAC,CAACI,IAAF,KAAS,GAAV,GAAiB,YAAjB,GAAgCJ,CAAC,CAACI,IAAvE,GAAgF,MAA3F;AACA,YAAIN,IAAI,GAAGK,GAAG,GAAI,GAAP,GAAWC,IAAX,GAAgB,IAAhB,GAAuBJ,CAAC,CAACE,IAApC;;AACA,YAAIF,CAAC,CAACK,IAAF,KAAW,CAAf,EAAmB;AACjBR,UAAAA,OAAO,CAACS,KAAR,CAAeR,IAAf;AACD,SAFD,MAEO,IAAIE,CAAC,CAACK,IAAF,KAAW,CAAf,EAAmB;AACxBR,UAAAA,OAAO,CAACU,IAAR,CAAcT,IAAd;AACD,SAFM,MAEA;AACLD,UAAAA,OAAO,CAACC,IAAR,CAAcA,IAAd;AACD;AACF;;AACD,aAAO,IAAP;AACD,KAdD;AAeAD,IAAAA,OAAO,CAACC,IAAR,CAAc,4CAAd;AACAD,IAAAA,OAAO,CAACC,IAAR,CAAc,GAAd;AACAD,IAAAA,OAAO,CAACC,IAAR,CAAc,GAAd;AACD;AACF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { store } from './state/store'\nimport { HashRouter } from 'react-router-dom'\n\nimport './styles/style.scss';\nimport './style.scss';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </HashRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Qui annoto (solo in dev) le prossime cose da fare\nif( process.env.REACT_APP_STAGE === 'dev' ) {\n  let todos = [\n    //{prio:2,text:\"\"},\n  ]\n  if( todos.length > 0 ) {\n    console.info( ' ' );\n    console.info( ' ' );\n    console.info( '================== ToDo ==================' );\n    todos.map((t, i) => {\n      if(!!t.text) {\n        let num = (i+1)+') '\n        let type = !!t.type ? ((t.type==='B') ? 'BUG' : (t.type==='R') ? 'REFINEMENT' : t.type ) : 'TASK'\n        let info = num  + '['+type+'] ' + t.text\n        if( t.prio === 1 ) {\n          console.error( info );\n        } else if( t.prio === 2 ) {\n          console.warn( info );\n        } else {\n          console.info( info );\n        }\n      }\n      return true\n    })\n    console.info( '==========================================' );\n    console.info( ' ' );\n    console.info( ' ' );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}