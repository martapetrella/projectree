{"ast":null,"code":"import { getCookie } from \"helpers/cookies\";\nimport { parseIfJsonString } from \"helpers/object_and_json\";\nexport var iframeFormLink = function iframeFormLink(prod, tracker) {\n  /* PER RIPRENDERE LA FORM:\n     /forms/generator/?network=wf&lang=it&product=htf_footfix&bodypadding=0px&fontsize=16px&marginvert=1&btnbkg=%2328a745&btncolor=%23ffffff&btnradius=3px&btnalign=center&inputborder=1px+solid+rgba%280%2C0%2C0%2C.125%29&inputheight=2em&inputpadding=1em+0.5em+&hidelabel=1&footerhide=1\n  */\n  var resultLink, startLink, trackLink, formParams;\n  var trackname = tracker.trackname,\n      trackid = tracker.trackid,\n      lanname = tracker.lanname,\n      lanid = tracker.lanid; // inizio del link (path delle api + pagina alla form del network corretto)\n\n  startLink = process.env.REACT_APP_FORM + \"?network=form_\" + prod.network; // se esiste il traker, lo aggiunge all'url nella querystring\n\n  trackLink = trackname && trackid ? \"&\" + trackname + \"=\" + trackid : ''; // aggiunge i parametri principali\n\n  formParams = \"&network=\" + prod.network;\n  formParams += \"&lang=\" + prod.lang;\n  formParams += \"&product=\" + prod.code; // se esiste lan, lo aggiunge come subid all'url nel campo dei parametri\n\n  formParams += lanname && lanid ? \"&\" + lanname + \"=\" + lanid : ''; // aggiunge la grafica:\n  // creo una stringa con tutti i parametri settati in dinamicDesignParams()\n\n  var designParamsList = dinamicDesignParams();\n  Object.keys(designParamsList).map(function (p, i) {\n    formParams += '&' + p + '=' + designParamsList[p];\n    return true;\n  }); // faccio encoding della query dei caratteri trovati perchè vadano nell value di \"&params\"\n\n  formParams = encodeURIComponent(formParams); // monta il link\n\n  resultLink = startLink + trackLink + \"&params=\" + formParams;\n  return resultLink;\n}; // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// VARIABILI PRIVATE (non esportate)\n\nvar dinamicDesignParams = function dinamicDesignParams() {\n  var defaultParams = {\n    bodypadding: \"0px\",\n    fontsize: \"16px\",\n    btnsize: \"18px\",\n    marginvert: \"1\",\n    btnbkg: \"#28a745\",\n    btncolor: \"#ffffff\",\n    btnradius: \"3px\",\n    btnalign: \"center\",\n    inputborder: \"1px solid rgba(0,0,0,.125)\",\n    inputheight: \"2em\",\n    inputpadding: \"1em 0.5em\",\n    hidelabel: \"1\",\n    footerhide: \"1\",\n    btnlabel: \"Procedi\",\n    // NOTE: momentanea. TODO: generalizzare nell'i18n globale\n    tnkstolink: \"/it/relateds/55#/\" // ora che ho creato il link di default, faccio un replace coi parametri nei cookies abTest\n\n  };\n  var abTest = parseIfJsonString(getCookie('abTest'));\n  Object.keys(abTest).map(function (p, i) {\n    console.log('p', p, defaultParams[p], abTest[p]);\n    if (abTest[p]) defaultParams[p] = abTest[p];\n    return true;\n  }); // !!!! QUI STAMPARE IL NUOVO OGGETTO\n\n  return defaultParams;\n};","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/offerprive.it/react/src/helpers/iframeFormLink.js"],"names":["getCookie","parseIfJsonString","iframeFormLink","prod","tracker","resultLink","startLink","trackLink","formParams","trackname","trackid","lanname","lanid","process","env","REACT_APP_FORM","network","lang","code","designParamsList","dinamicDesignParams","Object","keys","map","p","i","encodeURIComponent","defaultParams","bodypadding","fontsize","btnsize","marginvert","btnbkg","btncolor","btnradius","btnalign","inputborder","inputheight","inputpadding","hidelabel","footerhide","btnlabel","tnkstolink","abTest","console","log"],"mappings":"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","sourcesContent":["import { getCookie } from \"helpers/cookies\"\nimport { parseIfJsonString } from \"helpers/object_and_json\"\n\nexport const iframeFormLink = (prod,tracker)=>{\n  /* PER RIPRENDERE LA FORM:\n     /forms/generator/?network=wf&lang=it&product=htf_footfix&bodypadding=0px&fontsize=16px&marginvert=1&btnbkg=%2328a745&btncolor=%23ffffff&btnradius=3px&btnalign=center&inputborder=1px+solid+rgba%280%2C0%2C0%2C.125%29&inputheight=2em&inputpadding=1em+0.5em+&hidelabel=1&footerhide=1\n  */\n\n  let resultLink, startLink, trackLink, formParams\n  const { trackname, trackid, lanname, lanid } = tracker\n  // inizio del link (path delle api + pagina alla form del network corretto)\n  startLink = process.env.REACT_APP_FORM+\"?network=form_\" + prod.network\n  // se esiste il traker, lo aggiunge all'url nella querystring\n  trackLink = ( trackname && trackid ) ? \"&\" + trackname + \"=\" + trackid : ''\n  // aggiunge i parametri principali\n  formParams = \"&network=\" + prod.network\n  formParams += \"&lang=\" + prod.lang\n  formParams += \"&product=\" + prod.code\n  // se esiste lan, lo aggiunge come subid all'url nel campo dei parametri\n  formParams += ( lanname && lanid ) ? (\"&\" + lanname + \"=\" + lanid) : ''\n\n  // aggiunge la grafica:\n  // creo una stringa con tutti i parametri settati in dinamicDesignParams()\n  let designParamsList = dinamicDesignParams()\n  Object.keys(designParamsList).map((p, i) => {\n    formParams += '&'+p+'='+designParamsList[p]\n    return true\n  })\n  // faccio encoding della query dei caratteri trovati perchè vadano nell value di \"&params\"\n  formParams = encodeURIComponent(formParams)\n\n  // monta il link\n  resultLink = startLink + trackLink + \"&params=\" + formParams\n  return resultLink\n}\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// VARIABILI PRIVATE (non esportate)\n\nconst dinamicDesignParams = ()=>{\n  let defaultParams = {\n    bodypadding:\"0px\",\n    fontsize:\"16px\",\n    btnsize:\"18px\",\n    marginvert:\"1\",\n    btnbkg:\"#28a745\",\n    btncolor:\"#ffffff\",\n    btnradius:\"3px\",\n    btnalign:\"center\",\n    inputborder:\"1px solid rgba(0,0,0,.125)\",\n    inputheight:\"2em\",\n    inputpadding:\"1em 0.5em\",\n    hidelabel:\"1\",\n    footerhide:\"1\",\n    btnlabel:\"Procedi\", // NOTE: momentanea. TODO: generalizzare nell'i18n globale\n    tnkstolink:\"/it/relateds/55#/\"\n  }\n\n  // ora che ho creato il link di default, faccio un replace coi parametri nei cookies abTest\n  const abTest = parseIfJsonString( getCookie('abTest') );\n  Object.keys( abTest ).map((p, i) => {\n    console.log('p',p,defaultParams[p],abTest[p]);\n    if( abTest[p] ) defaultParams[p] = abTest[p]\n    return true\n  })\n\n  // !!!! QUI STAMPARE IL NUOVO OGGETTO\n\n  return defaultParams;\n}\n"]},"metadata":{},"sourceType":"module"}