{"ast":null,"code":"import _defineProperty from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wefed01/Sites/affx/public_html/react/src/pages/Cart/parts/Form.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { i18nContext } from 'contexts/i18n';\nimport { fetchUser, setCartSubmit, sendCartOrder\n/*, fetchCart*/\n} from 'state/actions';\nimport { Form, Input, Submit } from \"components/Form/\";\n\nvar FormUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormUser, _Component);\n\n  function FormUser(props) {\n    var _this;\n\n    _classCallCheck(this, FormUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormUser).call(this, props));\n\n    _this.handleChange = function (event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' || target.type === 'radio' ? target.checked : target.value;\n\n      _this.setState({\n        info: _objectSpread({}, _this.state.info, _defineProperty({}, target.name, value))\n      });\n\n      _this.props.dispatch(setCartSubmit(false));\n    };\n\n    _this.handleSubmit = function (event) {\n      var info = _this.state.info;\n      event.preventDefault();\n\n      _this.props.dispatch(fetchUser(info));\n\n      _this.processCart();\n    };\n\n    _this.processCart = function () {\n      var _this$state = _this.state,\n          info = _this$state.info,\n          prods = _this$state.prods; // TODO: queste azioni devono essere una callback\n      // della chiamata ajax di scrittura ordine multiplo\n\n      var onSubmit = _this.props.onSubmit;\n\n      _this.props.dispatch(setCartSubmit(true)); // SVUOTA IL CART\n      //this.props.dispatch( fetchCart( [] ) )\n\n\n      onSubmit(); // chiude la modale (se la form Ã¨ compresa nella modale)\n      // manda le info\n      //( TODO: mettere le altre azioni come callback di questa appena funziona)\n\n      _this.props.dispatch(sendCartOrder(info, prods));\n    };\n\n    var _this$props = _this.props,\n        cart = _this$props.cart,\n        user = _this$props.user; // riscrivo il prodotto tenedo solo i dati che mi servono\n\n    var newList = cart.list.map(function (p, index) {\n      return p = {\n        id: p.id,\n        code: p.code,\n        lang: p.lang,\n        nw: p.network\n      };\n    });\n    _this.state = {\n      info: user.info,\n      prods: newList\n    };\n    return _this;\n  }\n\n  _createClass(FormUser, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var i18n = this.context;\n      var form = i18n.form;\n      var cart = this.props.cart;\n      var fields = [{\n        name: 'name'\n      }, {\n        name: 'phone'\n      }, {\n        name: 'address'\n      }, {\n        name: 'zipcode',\n        cols: 'col-5'\n      }, {\n        name: 'city',\n        cols: 'col-7'\n      }, {\n        name: 'email'\n      }];\n      var inputs = fields.map(function (field, i) {\n        return React.createElement(Input, Object.assign({}, field, {\n          key: i,\n          defaultValue: _this2.state.info[field.name],\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }));\n      });\n      var thanks = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"FORM INVIATA!\");\n      var fillform = React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, inputs, React.createElement(Submit, {\n        value: form.send,\n        disabled: cart.submitted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \" \");\n      return React.createElement(\"div\", {\n        className: \"p-cart__form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, !this.state.isSubmitted ? fillform : thanks);\n    }\n  }]);\n\n  return FormUser;\n}(Component);\n\nFormUser.contextType = i18nContext;\nFormUser.contextType = i18nContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cart = state.cart,\n      user = state.user;\n  return {\n    cart: cart,\n    user: user\n  };\n};\n\nexport default connect(mapStateToProps)(FormUser);","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/public_html/react/src/pages/Cart/parts/Form.js"],"names":["React","Component","connect","i18nContext","fetchUser","setCartSubmit","sendCartOrder","Form","Input","Submit","FormUser","props","handleChange","event","target","value","type","checked","setState","info","state","name","dispatch","handleSubmit","preventDefault","processCart","prods","onSubmit","cart","user","newList","list","map","p","index","id","code","lang","nw","network","i18n","context","form","fields","cols","inputs","field","i","thanks","fillform","send","submitted","isSubmitted","contextType","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from \"react-redux\"\nimport {i18nContext} from 'contexts/i18n';\nimport { fetchUser, setCartSubmit, sendCartOrder/*, fetchCart*/ } from 'state/actions'\nimport { Form, Input, Submit } from \"components/Form/\";\n\nclass FormUser extends Component {\n  static contextType = i18nContext;\n  constructor(props) {\n    super(props)\n    const {cart,user} = this.props\n    // riscrivo il prodotto tenedo solo i dati che mi servono\n    const newList = cart.list.map((p,index) => (\n                      p = {id:p.id,code:p.code,lang:p.lang,nw:p.network}\n                    ))\n    this.state = {\n      info: user.info,\n      prods: newList\n    }\n  }\n  handleChange = (event) => {\n    const target = event.target;\n    const value = (target.type === 'checkbox' || target.type === 'radio') ? target.checked : target.value;\n    this.setState({ info:{ ...this.state.info, [target.name]: value } });\n    this.props.dispatch( setCartSubmit( false ) )\n  }\n  handleSubmit = (event) => {\n    const { info } = this.state\n    event.preventDefault();\n    this.props.dispatch( fetchUser( info ) )\n    this.processCart()\n  }\n  processCart = () => {\n    const { info, prods } = this.state\n    // TODO: queste azioni devono essere una callback\n    // della chiamata ajax di scrittura ordine multiplo\n    const { onSubmit } = this.props\n    this.props.dispatch( setCartSubmit( true ) )\n    // SVUOTA IL CART\n    //this.props.dispatch( fetchCart( [] ) )\n    onSubmit() // chiude la modale (se la form Ã¨ compresa nella modale)\n    // manda le info\n    //( TODO: mettere le altre azioni come callback di questa appena funziona)\n    this.props.dispatch( sendCartOrder( info, prods ) )\n\n  }\n  render(){\n    const i18n = this.context\n    const { form } = i18n\n    const { cart } = this.props\n    const fields = [{name:'name'},\n                    {name:'phone'},\n                    {name:'address'},\n                    {name:'zipcode',cols:'col-5'},\n                    {name:'city',cols:'col-7'},\n                    {name:'email'}]\n    const inputs = fields.map((field, i) => (\n                      <Input {...field}\n                             key={i}\n                             defaultValue={this.state.info[field.name]}\n                             onChange={this.handleChange} /> ));\n\n    const thanks = <p>FORM INVIATA!</p>\n    const fillform = <Form onSubmit={this.handleSubmit}>\n                       {inputs}\n                       <Submit value={form.send} disabled={cart.submitted} /> {/* TODO: TEMPORANEO - rimettere disabled={cart.submitted} */}\n                     </Form>\n    return (\n      <div className=\"p-cart__form\">\n        { !this.state.isSubmitted ? fillform : thanks }\n      </div>\n    )\n  }\n}\nFormUser.contextType = i18nContext\nconst mapStateToProps = (state) => {\n  const { cart, user } = state\n  return { cart, user }\n}\nexport default connect(mapStateToProps)( FormUser );\n"]},"metadata":{},"sourceType":"module"}