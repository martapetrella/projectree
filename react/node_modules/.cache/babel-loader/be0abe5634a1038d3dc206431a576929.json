{"ast":null,"code":"import _classCallCheck from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wefed01/Sites/affx/public_html/react/src/pages/Prods/Prod/parts/Form/index.js\";\nimport './style.scss';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { getCookie } from \"helpers/cookies\";\nimport { parseIfJsonString } from \"helpers/object_and_json\";\nimport { i18nContext } from 'contexts/i18n';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    _classCallCheck(this, Form);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Form).apply(this, arguments));\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var i18n = this.context;\n      var _this$props = this.props,\n          prod = _this$props.prod,\n          tracker = _this$props.tracker;\n      var linkIframe = iframeFormLink(prod, tracker, i18n);\n      var heightIframe = '300px';\n      return React.createElement(\"div\", {\n        className: \"c-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"frm-call-api\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"iframe\", {\n        title: \"form-order\",\n        src: linkIframe,\n        frameBorder: \"0\",\n        width: \"100%\",\n        height: heightIframe,\n        style: {\n          height: heightIframe\n        },\n        className: \"c-form__iframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nForm.contextType = i18nContext;\nForm.contextType = i18nContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var tracker = state.tracker;\n  return {\n    tracker: tracker\n  };\n};\n\nexport default connect(mapStateToProps)(Form); // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// VARIABILI PRIVATE (non esportate)\n\nvar iframeFormLink = function iframeFormLink(prod, tracker, i18n) {\n  console.log('tracker', tracker);\n  var resultLink, startLink, trackLink, formParams;\n  var trackname = tracker.trackname,\n      trackid = tracker.trackid,\n      lanname = tracker.lanname,\n      lanid = tracker.lanid; // inizio del link (path delle api + pagina alla form del network corretto)\n\n  startLink = process.env.REACT_APP_FORM + \"?network=form_\" + prod.network; // se esiste il traker, lo aggiunge all'url nella querystring\n\n  trackLink = trackname && trackid ? \"&\" + trackname + \"=\" + trackid : ''; // aggiunge i parametri principali\n\n  formParams = \"&network=\" + prod.network;\n  formParams += \"&lang=\" + prod.lang;\n  formParams += \"&product=\" + prod.code; // se esiste lan, lo aggiunge come subid all'url nel campo dei parametri\n\n  formParams += lanname && lanid ? \"&\" + lanname + \"=\" + lanid : ''; // aggiunge la grafica:\n  // creo una stringa con tutti i parametri settati in dinamicDesignParams()\n\n  var designParamsList = dinamicDesignParams(prod.id, i18n);\n  Object.keys(designParamsList).map(function (p, i) {\n    formParams += '&' + p + '=' + designParamsList[p];\n    return true;\n  }); // faccio encoding della query dei caratteri trovati perch√®\n  // risultino tutti una stringa unica, valore di \"&params\"\n\n  formParams = encodeURIComponent(formParams); // monta il link\n\n  resultLink = startLink + trackLink + \"&params=\" + formParams;\n  return resultLink;\n};\n\nvar dinamicDesignParams = function dinamicDesignParams(id, i18n) {\n  // TODO: trovare il modo di validare i dati che arrivano dal cookie\n  var zipcode = \"22331133\".substring(0, 5);\n  var defaultParams = {\n    bodypadding: \"0px\",\n    fontsize: \"16px\",\n    btnsize: \"18px\",\n    marginvert: \"1\",\n    btnbkg: \"#28a745\",\n    btncolor: \"#ffffff\",\n    btnradius: \"3px\",\n    btnalign: \"center\",\n    inputborder: \"1px solid rgba(0,0,0,.125)\",\n    inputheight: \"2em\",\n    inputpadding: \"1em 0.5em\",\n    hidelabel: \"1\",\n    footerhide: \"1\",\n    btnlabel: i18n.proceed,\n    tnkstolink: \"/it/relateds/\" + id + \"#/\",\n    //info utente\n    name: \"Ciccio\",\n    phone: \"123123123123\",\n    address: \"123123123123\",\n    city: \"123123123123\",\n    zipcode: zipcode,\n    email: \"Ciccio\"\n  };\n  console.log(defaultParams['tnkstolink']); // ora che ho creato i parametri  di default,\n  // faccio replace coi parametri nel cookie abTest\n\n  var abTest = parseIfJsonString(getCookie('abTest'));\n  console.log('abTest', abTest);\n  Object.keys(abTest).map(function (p, i) {\n    //console.log('p',p,defaultParams[p],abTest[p]);\n    if (abTest[p]) defaultParams[p] = abTest[p];\n    return true;\n  }); // !!!! QUI STAMPARE IL NUOVO OGGETTO\n\n  return defaultParams;\n};","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/public_html/react/src/pages/Prods/Prod/parts/Form/index.js"],"names":["React","Component","connect","getCookie","parseIfJsonString","i18nContext","Form","i18n","context","props","prod","tracker","linkIframe","iframeFormLink","heightIframe","height","contextType","mapStateToProps","state","console","log","resultLink","startLink","trackLink","formParams","trackname","trackid","lanname","lanid","process","env","REACT_APP_FORM","network","lang","code","designParamsList","dinamicDesignParams","id","Object","keys","map","p","i","encodeURIComponent","zipcode","substring","defaultParams","bodypadding","fontsize","btnsize","marginvert","btnbkg","btncolor","btnradius","btnalign","inputborder","inputheight","inputpadding","hidelabel","footerhide","btnlabel","proceed","tnkstolink","name","phone","address","city","email","abTest"],"mappings":"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","sourcesContent":["import './style.scss';\nimport React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { getCookie } from \"helpers/cookies\"\nimport { parseIfJsonString } from \"helpers/object_and_json\"\nimport {i18nContext} from 'contexts/i18n';\n\nclass Form extends Component {\n  static contextType = i18nContext;\n  render() {\n    let i18n = this.context;\n    const { prod, tracker } = this.props\n    let linkIframe = iframeFormLink(prod,tracker,i18n)\n    const heightIframe = '300px';\n    return (\n      <div className=\"c-form\">\n        <div className=\"frm-call-api\"></div>\n        <iframe title=\"form-order\"\n                src={linkIframe}\n                frameBorder=\"0\"\n                width=\"100%\" height={heightIframe}\n                style={{ height: heightIframe }}\n                className=\"c-form__iframe\">\n        </iframe>\n      </div>\n    )\n  }\n}\nForm.contextType = i18nContext\nconst mapStateToProps = (state) => {\n  const {tracker} = state\n  return { tracker }\n}\nexport default connect(mapStateToProps)(Form);\n\n// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n// VARIABILI PRIVATE (non esportate)\n\nconst iframeFormLink = (prod,tracker,i18n)=>{\n\n\n  console.log('tracker',tracker);\n\n\n  let resultLink, startLink, trackLink, formParams\n  const { trackname, trackid, lanname, lanid } = tracker\n\n\n  // inizio del link (path delle api + pagina alla form del network corretto)\n  startLink = process.env.REACT_APP_FORM+\"?network=form_\" + prod.network\n  // se esiste il traker, lo aggiunge all'url nella querystring\n  trackLink = ( trackname && trackid ) ? \"&\" + trackname + \"=\" + trackid : ''\n  // aggiunge i parametri principali\n  formParams = \"&network=\" + prod.network\n  formParams += \"&lang=\" + prod.lang\n  formParams += \"&product=\" + prod.code\n  // se esiste lan, lo aggiunge come subid all'url nel campo dei parametri\n  formParams += ( lanname && lanid ) ? (\"&\" + lanname + \"=\" + lanid) : ''\n  // aggiunge la grafica:\n  // creo una stringa con tutti i parametri settati in dinamicDesignParams()\n  let designParamsList = dinamicDesignParams(prod.id,i18n)\n  Object.keys(designParamsList).map((p, i) => {\n    formParams += '&'+p+'='+designParamsList[p]\n    return true\n  })\n  // faccio encoding della query dei caratteri trovati perch√®\n  // risultino tutti una stringa unica, valore di \"&params\"\n  formParams = encodeURIComponent(formParams)\n  // monta il link\n  resultLink = startLink + trackLink + \"&params=\" + formParams\n  return resultLink\n}\n\nconst dinamicDesignParams = (id,i18n)=>{\n\n  // TODO: trovare il modo di validare i dati che arrivano dal cookie\n  let zipcode = \"22331133\".substring(0,5)\n\n  let defaultParams = {\n    bodypadding:\"0px\",\n    fontsize:\"16px\",\n    btnsize:\"18px\",\n    marginvert:\"1\",\n    btnbkg:\"#28a745\",\n    btncolor:\"#ffffff\",\n    btnradius:\"3px\",\n    btnalign:\"center\",\n    inputborder:\"1px solid rgba(0,0,0,.125)\",\n    inputheight:\"2em\",\n    inputpadding:\"1em 0.5em\",\n    hidelabel:\"1\",\n    footerhide:\"1\",\n    btnlabel: i18n.proceed,\n    tnkstolink:\"/it/relateds/\"+id+\"#/\",\n    //info utente\n    name: \"Ciccio\",\n    phone: \"123123123123\",\n    address: \"123123123123\",\n    city: \"123123123123\",\n    zipcode,\n    email: \"Ciccio\",\n  }\n\n  console.log( defaultParams['tnkstolink'] );\n  // ora che ho creato i parametri  di default,\n  // faccio replace coi parametri nel cookie abTest\n  const abTest = parseIfJsonString( getCookie('abTest') );\n\n  console.log('abTest',abTest);\n\n  Object.keys( abTest ).map((p, i) => {\n    //console.log('p',p,defaultParams[p],abTest[p]);\n    if( abTest[p] ) defaultParams[p] = abTest[p]\n    return true\n  })\n  // !!!! QUI STAMPARE IL NUOVO OGGETTO\n  return defaultParams;\n}\n"]},"metadata":{},"sourceType":"module"}