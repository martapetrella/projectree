{"ast":null,"code":"import axios from 'axios';\nvar _process$env = process.env,\n    REACT_APP_API = _process$env.REACT_APP_API,\n    REACT_APP_FORM = _process$env.REACT_APP_FORM;\nexport function setLoading(status) {\n  return {\n    type: 'SET_LOADING',\n    status: status\n  };\n}\nexport function setLang(lang) {\n  return {\n    type: 'SET_LANG',\n    payload: {\n      lang: lang\n    }\n  };\n}\nexport function setTracker(tracker) {\n  return {\n    type: 'SET_TRACKID',\n    payload: {\n      tracker: tracker\n    }\n  };\n}\nexport function fetchProds(lang, cat) {\n  var langQuery = lang !== undefined && lang !== '' ? '&lang=' + lang : '';\n  var catQuery = cat !== undefined && cat !== '' ? '&cat=' + cat : '';\n  var apiUrl = REACT_APP_API + 'product/read.php?' + langQuery + catQuery;\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_PRODS',\n        payload: {\n          list: resp.data.records,\n          error: resp.data.error,\n          loading: false\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_PRODS',\n        payload: {\n          list: [],\n          error: 'error',\n          loading: false\n        }\n      });\n    });\n  };\n}\nexport function fetchProd(prodId) {\n  var apiUrl = REACT_APP_API + 'product/read_one.php?id=' + prodId;\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_PROD',\n        payload: {\n          list: resp.data.record,\n          error: resp.data.error,\n          loading: false\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_PROD',\n        payload: {\n          list: [],\n          error: 'error',\n          loading: false\n        }\n      });\n    });\n  };\n}\nexport function fetchCategs() {\n  var apiUrl = REACT_APP_API + 'category/read.php';\n  return function (dispatch, getState) {\n    axios.get(apiUrl).then(function (resp) {\n      dispatch({\n        type: 'SET_CATEGORIES_LIST',\n        payload: {\n          list: resp.data.records\n        }\n      });\n    }, function (error) {\n      dispatch({\n        type: 'SET_CATEGORIES_LIST',\n        payload: {\n          list: []\n        }\n      });\n    });\n  };\n}\nexport function fetchCart(list) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'SET_CART',\n      payload: {\n        list: list\n      }\n    });\n  };\n}\nexport function addToCart(list) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'ADD_TO_CART',\n      payload: {\n        list: list\n      }\n    });\n  };\n}\nexport function removeFromCartById(list) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'REMOVE_FROM_CART_BY_ID',\n      payload: {\n        list: list\n      }\n    });\n  };\n}\nexport function removeFromCartByIndex(list, index) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'REMOVE_FROM_CART_BY_INDEX',\n      payload: {\n        list: list,\n        index: index\n      }\n    });\n  };\n}\nexport function sendCartOrder(user, prods) {\n  var apiUrl = REACT_APP_FORM + '/multiform_test.php';\n  return function (dispatch) {\n    return axios.post(apiUrl, {\n      user: user,\n      prods: prods\n    }).then(function (response) {\n      //dispatch(createPostSuccess(response.data))\n      console.log('ok babe!', user, prods);\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n}\nexport function setCartSubmit(submitted) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'SET_SUBMIT_STATUS',\n      payload: {\n        submitted: submitted\n      }\n    });\n  };\n}\nexport function fetchUser(info) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'SET_USER',\n      payload: {\n        info: info\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/public_html/react/src/state/actions.js"],"names":["axios","process","env","REACT_APP_API","REACT_APP_FORM","setLoading","status","type","setLang","lang","payload","setTracker","tracker","fetchProds","cat","langQuery","undefined","catQuery","apiUrl","dispatch","getState","get","then","resp","list","data","records","error","loading","fetchProd","prodId","record","fetchCategs","fetchCart","addToCart","removeFromCartById","removeFromCartByIndex","index","sendCartOrder","user","prods","post","response","console","log","catch","setCartSubmit","submitted","fetchUser","info"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nconst { REACT_APP_API, REACT_APP_FORM } = process.env\n\nexport function setLoading(status) {\n    return {\n      type: 'SET_LOADING',\n      status\n    }\n}\n\nexport function setLang(lang) {\n  return {\n    type: 'SET_LANG',\n    payload: {\n      lang\n    }\n  }\n}\n\nexport function setTracker(tracker) {\n  return {\n    type: 'SET_TRACKID',\n    payload: {\n      tracker\n    }\n  }\n}\n\nexport function fetchProds(lang,cat) {\n  const langQuery = ( lang !== undefined && lang !== '' ) ? '&lang='+lang : ''\n  const catQuery = ( cat !== undefined && cat !== '' ) ? '&cat='+cat : ''\n  const apiUrl = REACT_APP_API+'product/read.php?'+langQuery+catQuery;\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_PRODS',\n            payload: {\n              list: resp.data.records,\n              error: resp.data.error,\n              loading: false\n            }\n        });\n    }, error => {\n      dispatch({\n          type: 'SET_PRODS',\n          payload: {\n              list: [],\n              error: 'error',\n              loading: false\n          }\n      });\n    })\n  };\n}\n\nexport function fetchProd(prodId) {\n  const apiUrl = REACT_APP_API+'product/read_one.php?id='+prodId;\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_PROD',\n            payload: {\n              list: resp.data.record,\n              error: resp.data.error,\n              loading: false\n            }\n        })\n    }, error => {\n      dispatch({\n          type: 'SET_PROD',\n          payload: {\n              list: [],\n              error: 'error',\n              loading: false\n          }\n      })\n    })\n  }\n}\n\nexport function fetchCategs() {\n  const apiUrl = REACT_APP_API+'category/read.php';\n  return (dispatch, getState) => {\n    axios.get(apiUrl).then((resp) => {\n        dispatch({\n            type: 'SET_CATEGORIES_LIST',\n            payload: {\n              list: resp.data.records\n            }\n        })\n    }, error => {\n      dispatch({\n          type: 'SET_CATEGORIES_LIST',\n          payload: {\n              list: []\n          }\n      })\n    })\n  }\n}\n\nexport function fetchCart(list) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'SET_CART',\n        payload: {\n          list\n        }\n    })\n  }\n}\n\nexport function addToCart(list) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'ADD_TO_CART',\n        payload: {\n          list\n        }\n    })\n  }\n}\n\nexport function removeFromCartById(list) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'REMOVE_FROM_CART_BY_ID',\n        payload: {\n          list\n        }\n    })\n  }\n}\n\nexport function removeFromCartByIndex(list,index) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'REMOVE_FROM_CART_BY_INDEX',\n        payload: {\n          list,\n          index\n        }\n    })\n  }\n}\n\nexport function sendCartOrder(user,prods) {\n  const apiUrl = REACT_APP_FORM+'/multiform_test.php';\n  return (dispatch) => {\n    return axios.post(apiUrl, {user,prods})\n      .then(response => {\n        //dispatch(createPostSuccess(response.data))\n        console.log('ok babe!',user,prods);\n      })\n      .catch(error => {\n        throw(error);\n      });\n  };\n}\n\nexport function setCartSubmit(submitted) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'SET_SUBMIT_STATUS',\n        payload: {\n          submitted\n        }\n    })\n  }\n}\n\nexport function fetchUser(info) {\n  return (dispatch, getState) => {\n    dispatch({\n        type: 'SET_USER',\n        payload: {\n          info\n        }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}