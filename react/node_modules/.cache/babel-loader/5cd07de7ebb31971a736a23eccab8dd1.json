{"ast":null,"code":"import _classCallCheck from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wefed01/Sites/affx/public_html/react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/wefed01/Sites/affx/public_html/react/src/templates/parts/Header/Navigation/Nav.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Link from \"components/Link/\";\nimport { getPath } from \"helpers/getPath\";\nimport { i18nContext } from 'contexts/i18n';\nimport { fetchCategs } from 'state/actions';\n\nvar Nav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Nav, _Component);\n\n  function Nav() {\n    _classCallCheck(this, Nav);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Nav).apply(this, arguments));\n  }\n\n  _createClass(Nav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.dispatch(fetchCategs());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var i18n = this.context;\n      var _this$props = this.props,\n          listClass = _this$props.listClass,\n          elemsClass = _this$props.elemsClass,\n          linksClass = _this$props.linksClass,\n          categories = _this$props.categories,\n          loading = _this$props.loading,\n          statusNavigation = _this$props.statusNavigation;\n      var path = getPath(i18n.lang);\n\n      closeNav = function closeNav() {\n        alert('ok');\n        statusNavigation('hide');\n      }; // se le categorie sono state caricate, allora mappale e crea l'array per la lista del menu\n\n\n      var menuElems = loading ? [] : categories.map(function (cat, i) {\n        return {\n          link: path.prods + '/' + cat.name + '/' + cat.id,\n          text: cat.name,\n          state: cat.id\n        };\n      });\n      var menuElem = menuElems.map(function (elem, index) {\n        return React.createElement(\"li\", {\n          className: elemsClass,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Link, {\n          className: linksClass,\n          to: {\n            pathname: elem.link,\n            state: elem.state\n          },\n          onClick: _this.closeNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, elem.text));\n      });\n      return React.createElement(\"ul\", {\n        className: 't-nav ' + listClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, menuElem);\n    }\n  }]);\n\n  return Nav;\n}(Component);\n\nNav.contextType = i18nContext;\nNav.contextType = i18nContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var categories = state.categories;\n  return {\n    loading: categories.loading,\n    categories: categories.list\n  };\n};\n\nexport default connect(mapStateToProps)(Nav);","map":{"version":3,"sources":["/Users/wefed01/Sites/affx/public_html/react/src/templates/parts/Header/Navigation/Nav.js"],"names":["React","Component","connect","Link","getPath","i18nContext","fetchCategs","Nav","props","dispatch","i18n","context","listClass","elemsClass","linksClass","categories","loading","statusNavigation","path","lang","closeNav","alert","menuElems","map","cat","i","link","prods","name","id","text","state","menuElem","elem","index","pathname","contextType","mapStateToProps","list"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,G;;;;;;;;;;;;;wCAEiB;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoBH,WAAW,EAA/B;AACD;;;6BACO;AAAA;;AACN,UAAII,IAAI,GAAG,KAAKC,OAAhB;AADM,wBAE+E,KAAKH,KAFpF;AAAA,UAEEI,SAFF,eAEEA,SAFF;AAAA,UAEaC,UAFb,eAEaA,UAFb;AAAA,UAEyBC,UAFzB,eAEyBA,UAFzB;AAAA,UAEqCC,UAFrC,eAEqCA,UAFrC;AAAA,UAEiDC,OAFjD,eAEiDA,OAFjD;AAAA,UAE0DC,gBAF1D,eAE0DA,gBAF1D;AAGN,UAAIC,IAAI,GAAGd,OAAO,CAAEM,IAAI,CAACS,IAAP,CAAlB;;AAEAC,MAAAA,QAAQ,GAAG,oBAAM;AAAEC,QAAAA,KAAK,CAAC,IAAD,CAAL;AAAYJ,QAAAA,gBAAgB,CAAC,MAAD,CAAhB;AAA0B,OAAzD,CALM,CAON;;;AACA,UAAIK,SAAS,GAAGN,OAAO,GAAG,EAAH,GAAQD,UAAU,CAACQ,GAAX,CAAe,UAACC,GAAD,EAAKC,CAAL;AAAA,eACd;AAACC,UAAAA,IAAI,EAAER,IAAI,CAACS,KAAL,GAAW,GAAX,GAAeH,GAAG,CAACI,IAAnB,GAAwB,GAAxB,GAA4BJ,GAAG,CAACK,EAAvC;AACEC,UAAAA,IAAI,EAAEN,GAAG,CAACI,IADZ;AAEEG,UAAAA,KAAK,EAAEP,GAAG,CAACK;AAFb,SADc;AAAA,OAAf,CAA/B;AAOA,UAAMG,QAAQ,GAAGV,SAAS,CAACC,GAAV,CAAc,UAACU,IAAD,EAAMC,KAAN;AAAA,eAC7B;AAAI,UAAA,SAAS,EAAErB,UAAf;AAA2B,UAAA,GAAG,EAAEqB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEpB,UAAjB;AAA6B,UAAA,EAAE,EAAG;AAACqB,YAAAA,QAAQ,EAAEF,IAAI,CAACP,IAAhB;AAAsBK,YAAAA,KAAK,EAAGE,IAAI,CAACF;AAAnC,WAAlC;AAA+E,UAAA,OAAO,EAAE,KAAI,CAACX,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGa,IAAI,CAACH,IADR,CADF,CAD6B;AAAA,OAAd,CAAjB;AAOA,aACE;AAAI,QAAA,SAAS,EAAE,WAASlB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGoB,QADH,CADF;AAKD;;;;EAhCe/B,S;;AAAZM,G,CACG6B,W,GAAc/B,W;AAiCvBE,GAAG,CAAC6B,WAAJ,GAAkB/B,WAAlB;;AACA,IAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAACN,KAAD,EAAW;AAAA,MACzBhB,UADyB,GACVgB,KADU,CACzBhB,UADyB;AAEjC,SAAO;AACLC,IAAAA,OAAO,EAAED,UAAU,CAACC,OADf;AAELD,IAAAA,UAAU,EAAEA,UAAU,CAACuB;AAFlB,GAAP;AAID,CAND;;AAOA,eAAepC,OAAO,CAACmC,eAAD,CAAP,CAA0B9B,GAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport Link from \"components/Link/\";\nimport { getPath } from \"helpers/getPath\"\nimport {i18nContext} from 'contexts/i18n';\nimport { fetchCategs } from 'state/actions'\n\nclass Nav extends Component {\n  static contextType = i18nContext;\n  componentDidMount () {\n    this.props.dispatch(fetchCategs())\n  }\n  render(){\n    let i18n = this.context;\n    const { listClass, elemsClass, linksClass, categories, loading, statusNavigation } = this.props\n    let path = getPath( i18n.lang )\n\n    closeNav = () => { alert('ok');statusNavigation('hide') }\n\n    // se le categorie sono state caricate, allora mappale e crea l'array per la lista del menu\n    let menuElems = loading ? [] : categories.map((cat,i) => (\n                                    {link: path.prods+'/'+cat.name+'/'+cat.id,\n                                      text: cat.name,\n                                      state: cat.id\n                                    }\n                                  ))\n\n    const menuElem = menuElems.map((elem,index) => (\n      <li className={elemsClass} key={index}>\n        <Link className={linksClass} to={ {pathname: elem.link, state:  elem.state } } onClick={this.closeNav} >\n          {elem.text}\n        </Link>\n      </li>\n    ))\n    return(\n      <ul className={'t-nav '+listClass}>\n        {menuElem}\n      </ul>\n    )\n  }\n}\nNav.contextType = i18nContext\nconst mapStateToProps = (state) => {\n  const { categories } = state\n  return {\n    loading: categories.loading,\n    categories: categories.list\n  }\n}\nexport default connect(mapStateToProps)( Nav );\n"]},"metadata":{},"sourceType":"module"}